document.addEventListener("DOMContentLoaded", function () {
    const carouselInner = document.getElementById("carouselInner");

    let startX;
    let scrollLeft;
    let isDragging = false;

    // Make images in the carousel clickable to expand
    document.querySelectorAll(".carousel img").forEach(img => {
        img.addEventListener("click", () => {
            if (!img.classList.contains("expanded")) {
                // Remove expanded class from any other image
                document.querySelectorAll(".carousel img").forEach(otherImg => {
                    otherImg.classList.remove("expanded");
                });
                img.classList.add("expanded");
                centerImage(img);
            }
        });
    });

    // Initial centering of the expanded image
    centerImage(document.querySelector(".carousel img.expanded"));

    // Carousel scroll functionality
    carouselInner.addEventListener("mousedown", (e) => {
        isDragging = true;
        startX = e.pageX - carouselInner.offsetLeft;
        scrollLeft = carouselInner.scrollLeft;
        carouselInner.classList.add('active');
    });

    carouselInner.addEventListener("mouseleave", () => {
        isDragging = false;
        carouselInner.classList.remove('active');
    });

    carouselInner.addEventListener("mouseup", () => {
        isDragging = false;
        carouselInner.classList.remove('active');
    });

    carouselInner.addEventListener("mousemove", (e) => {
        if (!isDragging) return;
        e.preventDefault();
        const x = e.pageX - carouselInner.offsetLeft;
        const walk = (x - startX) * 3; //scroll-fast
        carouselInner.scrollLeft = scrollLeft - walk;

        // Loop the images
        if (carouselInner.scrollLeft <= 0) {
            carouselInner.scrollLeft += carouselInner.scrollWidth / 2;
        }
        if (carouselInner.scrollLeft >= carouselInner.scrollWidth / 2) {
            carouselInner.scrollLeft -= carouselInner.scrollWidth / 2;
        }
    });

    // Center the expanded image
    function centerImage(img) {
        const containerWidth = carouselInner.clientWidth;
        const imgWidth = img.clientWidth * 2; // Since we are doubling the size
        const scrollPos = img.offsetLeft - (containerWidth / 2) + (imgWidth / 2);
        carouselInner.scrollLeft = scrollPos;
    }

    // Clone images to create looping effect
    function cloneImages() {
        const images = Array.from(document.querySelectorAll(".carousel img"));
        images.forEach(img => {
            const clone = img.cloneNode(true);
            carouselInner.appendChild(clone);
        });
    }

    cloneImages();
});
